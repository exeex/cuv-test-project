# 編譯器設定
cxx = clang++
ar = ar
cxxflags = -std=c++20 -Wall -O2

build_dir = .
project_root = ..
module_cache_dir = $build_dir/module_cache


# 建立模組快取目錄
rule create_dir
  command = mkdir -p $out
  description = Creating directory $out

# 一般 C++ 編譯規則 - 會從快取目錄尋找模組
rule cxx_compile
  command = $cxx $cxxflags -c $in -o $out -fprebuilt-module-path=.
  description = Compiling source $in

# 模組介面編譯規則 - 產生 BMI 到快取目錄
rule cxx_module_compile
  command = $cxx $cxxflags --precompile -o $out -c $in
  description = Compiling module interface $in

# 編譯靜態庫規則
rule cxx_static_library
  command = $ar rcs $out $in
  description = Linking $out

# 連結規則
rule cxx_link
  command = $cxx $in -o $out $ldflags
  description = Linking $out




# 先建立快取目錄
build $module_cache_dir: create_dir

# 編譯模組介面 (會自動產生 BMI 到快取目錄)
build add.pcm: cxx_module_compile $project_root/src/add.cppm

# 編譯使用模組的原始檔 (會從快取目錄尋找 BMI)
build add.o: cxx_compile $project_root/src/add.cpp | add.pcm

# 編譯靜態庫
build math.a: cxx_static_library add.o

default math.a
